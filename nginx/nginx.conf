# 配置用户或者组
user  root;

# 允许生成的进程数，默认为1
worker_processes  5;

# 制定日志路径，级别。这个设置可以放入全局块，http块，server块，级别以此为：debug|info|notice|warn|error|crit|alert|emerg
error_log  /var/log/nginx/error.log warn;

# 指定nginx进程运行文件存放地址
pid        /var/run/nginx.pid;


events {
    # accept_mutex on;   #设置网路连接序列化，防止惊群现象发生，默认为on
    # multi_accept on;  #设置一个进程是否同时接受多个网络连接，默认为off
    # use epoll;      #事件驱动模型，select|poll|kqueue|epoll|resig|/dev/poll|eventport
    # 最大连接数，默认为512
    worker_connections  1024;
}


http {
    # 文件扩展名与文件类型映射表
    include       /etc/nginx/mime.types;
    # 默认文件类型，默认为text/plain
    default_type  application/octet-stream;

    # 自定义日志格式
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # combined为日志格式的默认值
    access_log  /var/log/nginx/access.log  main;

    # 允许sendfile方式传输文件，默认为off，可以在http块，server块，location块
    sendfile        on;
    #tcp_nopush     on;

    # 连接超时时间，默认为75s，可以在http，server，location块
    keepalive_timeout  65;

    client_header_buffer_size 32k;
    large_client_header_buffers 4 32k;

    # 是否开启gzip
    gzip on;
    # 开始压缩的最小长度
    gzip_min_length 1k;
    # 推荐6 压缩级别(级别越高,压的越小,越浪费CPU计算资源)
    gzip_comp_level 2;
    # 对哪些类型的文件用压缩 如txt,xml,html ,css
    gzip_types text/plain application/javascript application/x-javascript text/css text/javascript;
    # 是否传输gzip压缩标志
    gzip_vary on;
    # 正则匹配UA 什么样的Uri不进行gzip
    gzip_disable "MSIE [1-6]\.";

    include /etc/nginx/conf.d/*.conf;
}
